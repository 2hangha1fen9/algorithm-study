class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
             int[] sorted = new int[m + n];
        int cur; //两个数组每次比较产生的最值
        for(int p1=0,p2=0;p1 < m || p2 < n;){
            if(p1 == m){  //p1指针超出边界让p2指针移动
                cur = nums2[p2++];
            }else if(p2 == n){ //p2指针超出边界让p1指针移动
                cur = nums1[p1++];
            }else if(nums1[p1] < nums2[p2]){  //p1指针值小于p2的值,移动p1指针
                cur = nums1[p1++];
            }else{  //p2指针值小于p1的值,移动p2指针
                cur = nums2[p2++];
            }
            //[p1 + p2 - 1]  p1+p2的值就为当前sorted的索引值,因为每次循环p1或者p2都会自增,不会超出p1+p2
            sorted[p1 + p2 - 1] = cur;
        }
        for(int i = 0;i < sorted.length;i++){
            nums1[i] = sorted[i];
        }
    }
}
//runtime:0 ms
//memory:41.3 MB
