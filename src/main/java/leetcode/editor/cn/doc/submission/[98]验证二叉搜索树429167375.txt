/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isValidBST(TreeNode root) {
        if(root == null){
            return false;
        }
        
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        while (!queue.isEmpty()){
            TreeNode currentRoot = queue.remove();
            if(currentRoot.left != null){
                if(currentRoot.left.val < currentRoot.val){
                    queue.add(currentRoot.left);
                }
                else{
                    return false;
                }
            }
            if(currentRoot.right != null){
                if(currentRoot.right.val > currentRoot.val){
                    queue.add(currentRoot.right);
                }
                else{
                    return false;
                }
            }
        }
        return true;
    }
}

//total_testcases:82
//total_correct:74
//input_formatted:[5,4,6,null,null,3,7]
//expected_output:false
//code_output:true
//last_testcase:[5,4,6,null,null,3,7]
