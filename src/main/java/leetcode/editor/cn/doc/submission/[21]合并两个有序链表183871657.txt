/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2)
    {
        //将两个链表入栈
        ArrayList<ListNode> list = new ArrayList<>();
        while(true)
        {
            if(l1 != null)
            {
                list.add(l1);
                l1 = l1.next;
            }
            if(l2 != null)
            {
                list.add(l2);
                l2 = l2.next;
            }
            
            if(l1 == null && l2 == null)
            {
                break;   
            }
        }
        if(list.size() == 0)
        {
            return null;
        }

        Collections.sort(list, new Comparator<ListNode>()
        {
            @Override
            public int compare(ListNode o1, ListNode o2)
            {
                return Integer.compare(o1.val,o2.val);
            }
        });

        ListNode cur = list.get(0);
        ListNode result = cur;
        for(int i = 0;i < list.size();i++)
        {
            cur.next = list.get(i);
            cur = cur.next;
        }
        cur.next = null;
        return result;
    }
}
//runtime:4 ms
//memory:37.8 MB
