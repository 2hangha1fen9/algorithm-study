> Problem: [485. 最大连续 1 的个数](https://leetcode.cn/problems/max-consecutive-ones/description/)

[TOC]

# 思路：

直接遍历就行！

# Code

* []

```Java
class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {
        int ans = Integer.MIN_VALUE;
        int cur = 0;
        for(int num : nums){
            if(num == 0){
                ans = Math.max(cur, ans);
                cur = 0;
            }else{
                cur++;
            }
        }
        return Math.max(cur, ans);
    }
}
```

* []

```C++
class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& nums) {
        int ans = 0, cur = 0;
        for(int num : nums){
            if(num == 0){
                ans = max(cur, ans);
                cur = 0;
            }else{
                cur++;
            }
        }
        return max(cur, ans);
    }
};
```

# 复杂度分析：

- **时间复杂度**：$O(n)$，其中 `n` 是数组的长度。需要遍历数组一次。
- **空间复杂度**：$O(1)$。

> 放弃一件事很容易，每天能坚持一件事一定很酷，一起每日一题吧！

**关注我 [leetCode专栏](http://t.csdn.cn/kQLJO)，每日更新！**
