### 解题思路

- 递归-此方法分3种情况
  - l1 节点为空返回 l2，l2 节点为空返回 l1 (没什么好说的)
  - l1 + l2 小于 10，则再调用此方法另下节点相加
  - l1 + l2 大于 10，则创建一个新节点并令其与 l1 下节点相加，然后 l1 节点取余，再让 l1 + l2

### 代码

* python3

```python
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        if not l1:
            return l2
        if not l2:
            return l1

        l1.val += l2.val    # 将两数相加，赋值给 l1 节点
        if l1.val >= 10:
            l1.next = self.addTwoNumbers(ListNode(l1.val // 10), l1.next)
            l1.val %= 10
        
        l1.next = self.addTwoNumbers(l1.next, l2.next)
        return l1

```

