> Problem: [2. 两数相加](https://leetcode.cn/problems/add-two-numbers/description/)

[TOC]

# 思路

> 讲述看到这一题的思路

# 解题方法

> 描述你的解题方法

# 复杂度

- 时间复杂度:

> 添加时间复杂度, 示例： $O(n)$

- 空间复杂度:

> 添加空间复杂度, 示例： $O(n)$

# Code

* []

```Java

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
     public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int carry = 0, sum = 0;
        ListNode head = new ListNode();
        ListNode p1 = head;
        while (true) {
            if (l1 != null && l2 != null) {
                sum = l1.val + l2.val + carry;
                if (sum >= 10) carry = 1;
                else carry = 0;
                p1.val = sum >= 10 ? sum - 10 : sum;
                l1 = l1.next;
                l2 = l2.next;
            } else if (l1 != null) {
                sum = l1.val + carry;
                if (sum >= 10) carry = 1;
                else carry = 0;
                p1.val = sum >= 10 ? sum - 10 : sum;
                l1 = l1.next;
            } else if (l2 != null) {
                sum = l2.val + carry;
                if (sum >= 10) carry = 1;
                else carry = 0;
                p1.val = sum >= 10 ? sum - 10 : sum;
                l2 = l2.next;
            } else {
                if (carry != 0) {
                    p1.next = new ListNode();
                    p1 = p1.next;
                    p1.val = carry;
                }
                break;
            }
            if(l1 != null || l2 != null){
                p1.next = new ListNode();
                p1 = p1.next;
            }
        }
        return head;
    }
}
```

